#include <msp430

#define CHPX1 BIT0
#DEFINE CHPX2 BIT1
#DEFINE CHPX3 BIT2




INT MAIN (VOID)
{  WDTCTL=WDTPW|WDTHOLD,
WHILE(1)
  {
    P1DIR= CHPX1 + CHPX2;
    P1OUT= CHPX1;
    P1OUT= CHPX2;
    PIDIR= CHPX2 + CHPX3;
    P1OUT= CHPX2;
    P1OUT= CHPX3;
    P1DIR= CHPX1+ CHPX3;
    P1OUT= CHPX1;
    P1OUT= CHPX3;
}
RETURN 1,
}


#include <msp430

#define CHPX1 BIT0
#DEFINE CHPX2 BIT1
#DEFINE CHPX3 BIT2
#DEFINE CHPX5 (CHPX1+ CHPX2+ CHPX3)
-----------------------------------------#DEFINE CHPX3 (CHPX_CLR P1OUT&=~CHPX5)
VOID CHARLI_ON (CHAR CHPX_OUT,
                CHAR CHPX_ON)
{ P1OUT&=~ CHPX5;
  P1DIR&=~ CHPX5;
  P1DIR |= CHPX_OUT;
  P1OUT |= CHPX_ON;
}

INT MAINS (VOID)
{WDTCTL=WDTPW|WDTHOLD,
WHILE(1)
  {CHARLIE_ON(CHPX1+ CHPX2; CHPX1);
   CHARLIE_ON(CHPX1+ CHPX2; CHPX2);
   CHARLIE_ON(CHPX3+ CHPX2; CHPX2);
   CHARLIE_ON(CHPX3+ CHPX2; CHPX3);
   CHARLIE_ON(CHPX1+ CHPX3; CHPX1);
   CHARLIE_ON(CHPX1+ CHPX3; CHPX3);
}
RETURN 0;
}


INT MAIN (VOID)
{ CHAR OUT[]={CHPX1+CHPX2;
              CHPX1+CHPX2;
              CHPX1+CHPX3;
              CHPX1+CHPX3;
              CHPX3+CHPX2;
              CHPX3+CHPX2};
CHA ON[]{CHPX1, CHPX2;
         CHPX2, CHPX3;
         CHPX3, CHPX1);
CHAR E;
WDTCTL=WDTPW|WDTHOLD,
WHILE(1)
  {
FOT (E=0.E<6.E++)
CHARLIE_ON(OUT[E];
           ON[E]);
}
RETURN 0;
}



FFFF 65526MS