Para as questões 2 a 5, considere que as variáveis 'f', 'g', 'h', 'i' e 'j' são do tipo inteiro (16 bits na arquitetura do MSP430), e que o vetor 'A[]' é do tipo inteiro. Estas variáveis estão armazenadas nos seguintes registradores:
	f: R4
	g: R5
	h: R6
	i: R7
	j: R8
	A: R9
Utilize os registradores R11, R12, R13, R14 e R15 para armazenar valores temporários.

1. Escreva os trechos de código assembly do MSP430 para:
	(a) Somente setar o bit menos significativo de R5.

AND R5,01

	(b) Somente setar dois bits de R6: o menos significativo e o segundo menos significativo.
AND R6,03

	(c) Somente zerar o terceiro bit menos significativo de R7.
AND R7,04

	(d) Somente zerar o terceiro e o quarto bits menos significativo de R8.
AND R8,0C

	(e) Somente inverter o bit mais significativo de R9.
XOR R9,80

	(f) Inverter o nibble mais significativo de R10, e setar o nibble menos significativo de R10.
XOR R10,80
AND R10,01 

2. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

	if(i>j) f = g+h+10;
	else f = g-h-10;


   CMP R7,R8
   JUMPN A1
   SUB R4,R5,R6
   SUB R4,R4,0A
A1:ADD R4,R5,R6
   ADD R4,R4,0A
3. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

	while(save[i]!=k) i++;
CMP R7,R10
JUMPNZ
ADD R7,R7,01

4. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

	for(i=0; i<100; i++) A[i] = i*2;  --100---64

   MOV R7,00
   CMP R7,64
   JNE A1
A1:ADD R7,R7,01
   ADD R10,R7,R7

5. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

       for(i=99; i>=0; i--) A[i] = i*2;

   MOV R7,63
   CMP R7,00
   JNE A1
A1:SUB R7,R7,01
   ADD R10,R7,R7